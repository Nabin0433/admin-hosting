{"version":3,"sources":["views/Profile/Grid/GridItem.js","views/Profile/Grid/GridContainer.js","views/Profile/CustomInput/material/material.js","views/Profile/CustomInput/CustomInputStyle.js","views/Profile/CustomInput/CustomInput.js","views/Profile/Card/Card.js","views/Profile/Card/CardStyles/material/material.js","views/Profile/Card/CardStyles/cardHeaderStyle.js","views/Profile/Card/CardHeader.js","views/Profile/Card/CardStyles/cardBodyStyle.js","views/Profile/Card/CardBody.js","views/Profile/Card/CardStyles/cardFooterStyle.js","views/Profile/Card/CardFooter.js","views/Profile/Profile.js"],"names":["useStyles","makeStyles","grid","padding","GridItem","props","classes","children","rest","Grid","item","className","hexToRgb","input","replace","test","length","Error","first","second","last","toUpperCase","parseInt","defaultFont","fontFamily","fontWeight","lineHeight","primaryColor","warningColor","dangerColor","successColor","infoColor","roseColor","grayColor","blackColor","primaryBoxShadow","boxShadow","infoBoxShadow","successBoxShadow","warningBoxShadow","dangerBoxShadow","roseBoxShadow","title","background","margin","paddingTop","borderTop","height","color","textDecoration","marginTop","marginBottom","minHeight","customInputStyle","disabled","backgroundColor","underline","borderColor","borderWidth","underlineError","underlineSuccess","labelRoot","fontSize","letterSpacing","labelRootError","labelRootSuccess","feedback","position","top","right","zIndex","display","width","textAlign","pointerEvents","formControl","paddingBottom","verticalAlign","styles","CustomInput","formControlProps","labelText","id","labelProps","inputProps","error","success","name","inputRef","labelClasses","classNames","underlineClasses","undefined","FormControl","InputLabel","htmlFor","Input","root","Card","plain","profile","chart","login","cardClasses","card","cardPlain","cardProfile","cardChart","cardLogin","whiteColor","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","cardHeaderStyle","cardHeader","borderBottom","borderRadius","overflow","cardHeaderPlain","marginLeft","marginRight","cardHeaderStats","cardHeaderIcon","CardHeader","stats","icon","cardHeaderClasses","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","paddingLeft","paddingRight","cardBodyProfile","CardBody","cardBodyClasses","cardFooterStyle","cardFooter","justifyContent","alignItems","border","cardFooterProfile","cardFooterPlain","cardFooterStats","cardFooterChart","CardFooter","cardFooterClasses","cardCategoryWhite","cardTitleWhite","cardHeaderColor","profile_info","UserProfile","register","useForm","registerPasswordFrom","user","useSelector","selectUser","style","sm","xs","md","required","fullWidth","defaultValue","type","autoComplete","email","Button","variant","Ref","src","alt","weight"],"mappings":"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","file":"static/js/14.0bfc5064.chunk.js","sourcesContent":["import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","import React from \"react\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst styles = {\r\n  grid: {\r\n    padding: \"0 15px !important\"\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function GridItem(props) {\r\n  const classes = useStyles();\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <Grid item {...rest} className={classes.grid}>\r\n      {children}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nGridItem.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n","const hexToRgb = input => {\r\n    input = input + \"\";\r\n    input = input.replace(\"#\", \"\");\r\n    let hexRegex = /[0-9A-Fa-f]/g;\r\n    if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n        throw new Error(\"input is not a valid hex color.\");\r\n    }\r\n    if (input.length === 3) {\r\n        let first = input[0];\r\n        let second = input[1];\r\n        let last = input[2];\r\n        input = first + first + second + second + last + last;\r\n    }\r\n    input = input.toUpperCase();\r\n    let first = input[0] + input[1];\r\n    let second = input[2] + input[3];\r\n    let last = input[4] + input[5];\r\n    return (\r\n        parseInt(first, 16) +\r\n        \", \" +\r\n        parseInt(second, 16) +\r\n        \", \" +\r\n        parseInt(last, 16)\r\n    );\r\n};\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\"\r\n};\r\n\r\nconst containerAuth = {\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    \"@media (min-width: 768px)\": {\r\n        width: \"750px\"\r\n    },\r\n    \"@media (min-width: 992px)\": {\r\n        width: \"970px\"\r\n    },\r\n    \"@media (min-width: 1200px)\": {\r\n        width: \"1170px\"\r\n    },\r\n    \"&:before,&:after\": {\r\n        display: \"table\",\r\n        content: '\" \"'\r\n    },\r\n    \"&:after\": {\r\n        clear: \"both\"\r\n    }\r\n};\r\n\r\nconst defaultFont = {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: \"300\",\r\n    lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\",\r\n    \"#ccc\",\r\n    \"#f5f5f5\",\r\n    \"#495057\",\r\n    \"#e7e7e7\",\r\n    \"#212121\",\r\n    \"#c8c8c8\",\r\n    \"#505050\"\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\nconst twitterColor = \"#55acee\";\r\nconst facebookColor = \"#3b5998\";\r\nconst googleColor = \"#dd4b39\";\r\nconst dribbbleColor = \"#ea4c89\";\r\n\r\nconst boxShadow = {\r\n    boxShadow:\r\n        \"0 10px 30px -12px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.42), 0 4px 25px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.2)\"\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst infoBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst successBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst warningBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst dangerBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst roseBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \",.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n    margin: \"0 20px 10px\",\r\n    paddingTop: \"10px\",\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n    height: \"auto\",\r\n    ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n    margin: \"-20px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"15px\"\r\n};\r\n\r\nconst card = {\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    margin: \"25px 0\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    borderRadius: \"3px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n        \"0 10px 20px -12px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.42), 0 3px 20px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n        color: grayColor[1],\r\n        fontWeight: \"400\",\r\n        lineHeight: \"1\"\r\n    }\r\n};\r\n\r\nconst cardTitle = {\r\n    ...title,\r\n    marginTop: \"0\",\r\n    marginBottom: \"3px\",\r\n    minHeight: \"auto\",\r\n    \"& a\": {\r\n        ...title,\r\n        marginTop: \".625rem\",\r\n        marginBottom: \"0.75rem\",\r\n        minHeight: \"auto\"\r\n    }\r\n};\r\n\r\nconst cardSubtitle = {\r\n    marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n    \"& + $cardLink\": {\r\n        marginLeft: \"1.25rem\"\r\n    }\r\n};\r\n\r\nexport {\r\n    hexToRgb,\r\n    //variables\r\n    drawerWidth,\r\n    transition,\r\n    container,\r\n    containerAuth,\r\n    boxShadow,\r\n    card,\r\n    defaultFont,\r\n    primaryColor,\r\n    warningColor,\r\n    dangerColor,\r\n    successColor,\r\n    infoColor,\r\n    roseColor,\r\n    grayColor,\r\n    blackColor,\r\n    whiteColor,\r\n    twitterColor,\r\n    facebookColor,\r\n    googleColor,\r\n    dribbbleColor,\r\n    primaryBoxShadow,\r\n    infoBoxShadow,\r\n    successBoxShadow,\r\n    warningBoxShadow,\r\n    dangerBoxShadow,\r\n    roseBoxShadow,\r\n    warningCardHeader,\r\n    successCardHeader,\r\n    dangerCardHeader,\r\n    infoCardHeader,\r\n    primaryCardHeader,\r\n    roseCardHeader,\r\n    cardActions,\r\n    cardHeader,\r\n    defaultBoxShadow,\r\n    title,\r\n    cardTitle,\r\n    cardSubtitle,\r\n    cardLink\r\n};","import {\r\n  primaryColor,\r\n  dangerColor,\r\n  successColor,\r\n  grayColor,\r\n  defaultFont,\r\n} from \"./material/material\";\r\nconst customInputStyle = {\r\n  disabled: {\r\n    \"&:before\": {\r\n      backgroundColor: \"transparent !important\",\r\n    },\r\n  },\r\n  underline: {\r\n    \"&:hover:not($disabled):before,&:before\": {\r\n      borderColor: grayColor[4] + \" !important\",\r\n      borderWidth: \"1px !important\",\r\n    },\r\n    \"&:after\": {\r\n      borderColor: primaryColor[0],\r\n    },\r\n  },\r\n  underlineError: {\r\n    \"&:after\": {\r\n      borderColor: dangerColor[0],\r\n    },\r\n  },\r\n  underlineSuccess: {\r\n    \"&:after\": {\r\n      borderColor: successColor[0],\r\n    },\r\n  },\r\n  labelRoot: {\r\n    ...defaultFont,\r\n    color: grayColor[3] + \" !important\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"14px\",\r\n    lineHeight: \"1.42857\",\r\n    letterSpacing: \"unset\",\r\n  },\r\n  labelRootError: {\r\n    color: dangerColor[0],\r\n  },\r\n  labelRootSuccess: {\r\n    color: successColor[0],\r\n  },\r\n  feedback: {\r\n    position: \"absolute\",\r\n    top: \"18px\",\r\n    right: \"0\",\r\n    zIndex: \"2\",\r\n    display: \"block\",\r\n    width: \"24px\",\r\n    height: \"24px\",\r\n    textAlign: \"center\",\r\n    pointerEvents: \"none\",\r\n  },\r\n  marginTop: {\r\n    marginTop: \"16px\",\r\n  },\r\n  formControl: {\r\n    paddingBottom: \"10px\",\r\n    margin: \"27px 0 0 0\",\r\n    position: \"relative\",\r\n    verticalAlign: \"unset\",\r\n  },\r\n};\r\n\r\nexport default customInputStyle;\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport styles from \"./CustomInputStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    formControlProps,\r\n    labelText,\r\n    id,\r\n    labelProps,\r\n    inputProps,\r\n    error,\r\n    success,\r\n    name,\r\n    inputRef\r\n  } = props;\r\n\r\n  const labelClasses = classNames({\r\n    [\" \" + classes.labelRootError]: error,\r\n    [\" \" + classes.labelRootSuccess]: success && !error\r\n  });\r\n  const underlineClasses = classNames({\r\n    [classes.underlineError]: error,\r\n    [classes.underlineSuccess]: success && !error,\r\n    [classes.underline]: true\r\n  });\r\n  const marginTop = classNames({\r\n    [classes.marginTop]: labelText === undefined\r\n  });\r\n  return (\r\n    <FormControl\r\n      {...formControlProps}\r\n      className={formControlProps.className + \" \" + classes.formControl}\r\n    >\r\n      {labelText !== undefined ? (\r\n        <InputLabel\r\n          className={classes.labelRoot + labelClasses}\r\n          htmlFor={id}\r\n          {...labelProps}\r\n        >\r\n          {labelText}\r\n        </InputLabel>\r\n      ) : null}\r\n      <Input\r\n        classes={{\r\n          root: marginTop,\r\n          disabled: classes.disabled,\r\n          underline: underlineClasses\r\n        }}\r\n        id={id}\r\n        name={name}\r\n        inputRef={inputRef}\r\n        {...inputProps}\r\n      />\r\n      {error ? (\r\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\r\n      ) : success ? (\r\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\r\n      ) : null}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool\r\n};\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// core components\r\nimport styles from \"./CardStyles/cardStyle.css\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Card(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, chart, login, ...rest } = props;\r\n  const cardClasses = classNames({\r\n    [classes.card]: true,\r\n    [classes.cardPlain]: plain,\r\n    [classes.cardProfile]: profile,\r\n    [classes.cardChart]: chart,\r\n    [classes.cardLogin]: login,\r\n    [className]: className !== undefined,\r\n  });\r\n  return (\r\n    <div className={cardClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  login: PropTypes.bool,\r\n  children: PropTypes.node,\r\n};","const hexToRgb = input => {\r\n    input = input + \"\";\r\n    input = input.replace(\"#\", \"\");\r\n    let hexRegex = /[0-9A-Fa-f]/g;\r\n    if (!hexRegex.test(input) || (input.length !== 3 && input.length !== 6)) {\r\n        throw new Error(\"input is not a valid hex color.\");\r\n    }\r\n    if (input.length === 3) {\r\n        let first = input[0];\r\n        let second = input[1];\r\n        let last = input[2];\r\n        input = first + first + second + second + last + last;\r\n    }\r\n    input = input.toUpperCase();\r\n    let first = input[0] + input[1];\r\n    let second = input[2] + input[3];\r\n    let last = input[4] + input[5];\r\n    return (\r\n        parseInt(first, 16) +\r\n        \", \" +\r\n        parseInt(second, 16) +\r\n        \", \" +\r\n        parseInt(last, 16)\r\n    );\r\n};\r\nconst drawerWidth = 260;\r\n\r\nconst transition = {\r\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\"\r\n};\r\n\r\nconst container = {\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\"\r\n};\r\n\r\nconst containerAuth = {\r\n    paddingRight: \"15px\",\r\n    paddingLeft: \"15px\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    \"@media (min-width: 768px)\": {\r\n        width: \"750px\"\r\n    },\r\n    \"@media (min-width: 992px)\": {\r\n        width: \"970px\"\r\n    },\r\n    \"@media (min-width: 1200px)\": {\r\n        width: \"1170px\"\r\n    },\r\n    \"&:before,&:after\": {\r\n        display: \"table\",\r\n        content: '\" \"'\r\n    },\r\n    \"&:after\": {\r\n        clear: \"both\"\r\n    }\r\n};\r\n\r\nconst defaultFont = {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: \"300\",\r\n    lineHeight: \"1.5em\"\r\n};\r\n\r\nconst primaryColor = [\"#9c27b0\", \"#ab47bc\", \"#8e24aa\", \"#af2cc5\"];\r\nconst warningColor = [\"#ff9800\", \"#ffa726\", \"#fb8c00\", \"#ffa21a\"];\r\nconst dangerColor = [\"#f44336\", \"#ef5350\", \"#e53935\", \"#f55a4e\"];\r\nconst successColor = [\"#4caf50\", \"#66bb6a\", \"#43a047\", \"#5cb860\"];\r\nconst infoColor = [\"#00acc1\", \"#26c6da\", \"#00acc1\", \"#00d3ee\"];\r\nconst roseColor = [\"#e91e63\", \"#ec407a\", \"#d81b60\", \"#eb3573\"];\r\nconst grayColor = [\r\n    \"#999\",\r\n    \"#777\",\r\n    \"#3C4858\",\r\n    \"#AAAAAA\",\r\n    \"#D2D2D2\",\r\n    \"#DDD\",\r\n    \"#b4b4b4\",\r\n    \"#555555\",\r\n    \"#333\",\r\n    \"#a9afbb\",\r\n    \"#eee\",\r\n    \"#e7e7e7\",\r\n    \"#ccc\",\r\n    \"#f5f5f5\",\r\n    \"#495057\",\r\n    \"#e7e7e7\",\r\n    \"#212121\",\r\n    \"#c8c8c8\",\r\n    \"#505050\"\r\n];\r\nconst blackColor = \"#000\";\r\nconst whiteColor = \"#FFF\";\r\nconst twitterColor = \"#55acee\";\r\nconst facebookColor = \"#3b5998\";\r\nconst googleColor = \"#dd4b39\";\r\nconst dribbbleColor = \"#ea4c89\";\r\n\r\nconst boxShadow = {\r\n    boxShadow:\r\n        \"0 10px 30px -12px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.42), 0 4px 25px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.2)\"\r\n};\r\n\r\nconst primaryBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(primaryColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst infoBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(infoColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst successBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(successColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst warningBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(warningColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst dangerBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(dangerColor[0]) +\r\n        \",.4)\"\r\n};\r\nconst roseBoxShadow = {\r\n    boxShadow:\r\n        \"0 4px 20px 0 rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \",.14), 0 7px 10px -5px rgba(\" +\r\n        hexToRgb(roseColor[0]) +\r\n        \",.4)\"\r\n};\r\n\r\nconst warningCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + warningColor[1] + \", \" + warningColor[2] + \")\",\r\n    ...warningBoxShadow\r\n};\r\nconst successCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + successColor[1] + \", \" + successColor[2] + \")\",\r\n    ...successBoxShadow\r\n};\r\nconst dangerCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + dangerColor[1] + \", \" + dangerColor[2] + \")\",\r\n    ...dangerBoxShadow\r\n};\r\nconst infoCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + infoColor[1] + \", \" + infoColor[2] + \")\",\r\n    ...infoBoxShadow\r\n};\r\nconst primaryCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + primaryColor[1] + \", \" + primaryColor[2] + \")\",\r\n    ...primaryBoxShadow\r\n};\r\nconst roseCardHeader = {\r\n    background:\r\n        \"linear-gradient(60deg, \" + roseColor[1] + \", \" + roseColor[2] + \")\",\r\n    ...roseBoxShadow\r\n};\r\n\r\nconst cardActions = {\r\n    margin: \"0 20px 10px\",\r\n    paddingTop: \"10px\",\r\n    borderTop: \"1px solid \" + grayColor[10],\r\n    height: \"auto\",\r\n    ...defaultFont\r\n};\r\n\r\nconst cardHeader = {\r\n    margin: \"-20px 15px 0\",\r\n    borderRadius: \"3px\",\r\n    padding: \"15px\"\r\n};\r\n\r\nconst card = {\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    margin: \"25px 0\",\r\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\r\n    borderRadius: \"3px\",\r\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\r\n    background: whiteColor\r\n};\r\n\r\nconst defaultBoxShadow = {\r\n    border: \"0\",\r\n    borderRadius: \"3px\",\r\n    boxShadow:\r\n        \"0 10px 20px -12px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.42), 0 3px 20px 0px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.12), 0 8px 10px -5px rgba(\" +\r\n        hexToRgb(blackColor) +\r\n        \", 0.2)\",\r\n    padding: \"10px 0\",\r\n    transition: \"all 150ms ease 0s\"\r\n};\r\n\r\nconst title = {\r\n    color: grayColor[2],\r\n    textDecoration: \"none\",\r\n    fontWeight: \"300\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"25px\",\r\n    minHeight: \"32px\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    \"& small\": {\r\n        color: grayColor[1],\r\n        fontWeight: \"400\",\r\n        lineHeight: \"1\"\r\n    }\r\n};\r\n\r\nconst cardTitle = {\r\n    ...title,\r\n    marginTop: \"0\",\r\n    marginBottom: \"3px\",\r\n    minHeight: \"auto\",\r\n    \"& a\": {\r\n        ...title,\r\n        marginTop: \".625rem\",\r\n        marginBottom: \"0.75rem\",\r\n        minHeight: \"auto\"\r\n    }\r\n};\r\n\r\nconst cardSubtitle = {\r\n    marginTop: \"-.375rem\"\r\n};\r\n\r\nconst cardLink = {\r\n    \"& + $cardLink\": {\r\n        marginLeft: \"1.25rem\"\r\n    }\r\n};\r\n\r\nexport {\r\n    hexToRgb,\r\n    //variables\r\n    drawerWidth,\r\n    transition,\r\n    container,\r\n    containerAuth,\r\n    boxShadow,\r\n    card,\r\n    defaultFont,\r\n    primaryColor,\r\n    warningColor,\r\n    dangerColor,\r\n    successColor,\r\n    infoColor,\r\n    roseColor,\r\n    grayColor,\r\n    blackColor,\r\n    whiteColor,\r\n    twitterColor,\r\n    facebookColor,\r\n    googleColor,\r\n    dribbbleColor,\r\n    primaryBoxShadow,\r\n    infoBoxShadow,\r\n    successBoxShadow,\r\n    warningBoxShadow,\r\n    dangerBoxShadow,\r\n    roseBoxShadow,\r\n    warningCardHeader,\r\n    successCardHeader,\r\n    dangerCardHeader,\r\n    infoCardHeader,\r\n    primaryCardHeader,\r\n    roseCardHeader,\r\n    cardActions,\r\n    cardHeader,\r\n    defaultBoxShadow,\r\n    title,\r\n    cardTitle,\r\n    cardSubtitle,\r\n    cardLink\r\n};","import {\r\n  warningCardHeader,\r\n  successCardHeader,\r\n  dangerCardHeader,\r\n  infoCardHeader,\r\n  primaryCardHeader,\r\n  roseCardHeader,\r\n  whiteColor\r\n} from './material/material';\r\nconst cardHeaderStyle = {\r\n    cardHeader: {\r\n      padding: \"0.75rem 1.25rem\",\r\n      marginBottom: \"0\",\r\n      borderBottom: \"none\",\r\n      background: \"transparent\",\r\n      zIndex: \"3 !important\",\r\n      \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n        margin: \"0 15px\",\r\n        padding: \"0\",\r\n        position: \"relative\",\r\n        color: whiteColor\r\n      },\r\n      \"&:first-child\": {\r\n        borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\r\n      },\r\n      \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n        \"&:not($cardHeaderIcon)\": {\r\n          borderRadius: \"3px\",\r\n          marginTop: \"-20px\",\r\n          padding: \"15px\"\r\n        }\r\n      },\r\n      \"&$cardHeaderStats svg\": {\r\n        fontSize: \"36px\",\r\n        lineHeight: \"56px\",\r\n        textAlign: \"center\",\r\n        width: \"36px\",\r\n        height: \"36px\",\r\n        margin: \"10px 10px 4px\"\r\n      },\r\n      \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\r\n        fontSize: \"36px\",\r\n        lineHeight: \"56px\",\r\n        width: \"56px\",\r\n        height: \"56px\",\r\n        textAlign: \"center\",\r\n        overflow: \"unset\",\r\n        marginBottom: \"1px\"\r\n      },\r\n      \"&$cardHeaderStats$cardHeaderIcon\": {\r\n        textAlign: \"right\"\r\n      }\r\n    },\r\n    cardHeaderPlain: {\r\n      marginLeft: \"0px !important\",\r\n      marginRight: \"0px !important\"\r\n    },\r\n    cardHeaderStats: {\r\n      \"& $cardHeaderIcon\": {\r\n        textAlign: \"right\"\r\n      },\r\n      \"& h1,& h2,& h3,& h4,& h5,& h6\": {\r\n        margin: \"0 !important\"\r\n      }\r\n    },\r\n    cardHeaderIcon: {\r\n      \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\r\n        background: \"transparent\",\r\n        boxShadow: \"none\"\r\n      },\r\n      \"& i,& .material-icons\": {\r\n        width: \"33px\",\r\n        height: \"33px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"33px\"\r\n      },\r\n      \"& svg\": {\r\n        width: \"24px\",\r\n        height: \"24px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"33px\",\r\n        margin: \"5px 4px 0px\"\r\n      }\r\n    },\r\n    warningCardHeader: {\r\n      color: whiteColor,\r\n      \"&:not($cardHeaderIcon)\": {\r\n        ...warningCardHeader\r\n      }\r\n    },\r\n    successCardHeader: {\r\n      color: whiteColor,\r\n      \"&:not($cardHeaderIcon)\": {\r\n        ...successCardHeader\r\n      }\r\n    },\r\n    dangerCardHeader: {\r\n      color: whiteColor,\r\n      \"&:not($cardHeaderIcon)\": {\r\n        ...dangerCardHeader\r\n      }\r\n    },\r\n    infoCardHeader: {\r\n      color: whiteColor,\r\n      \"&:not($cardHeaderIcon)\": {\r\n        ...infoCardHeader\r\n      }\r\n    },\r\n    primaryCardHeader: {\r\n      color: whiteColor,\r\n      \"&:not($cardHeaderIcon)\": {\r\n        ...primaryCardHeader\r\n      }\r\n    },\r\n    roseCardHeader: {\r\n      color: whiteColor,\r\n      \"&:not($cardHeaderIcon)\": {\r\n        ...roseCardHeader\r\n      }\r\n    }\r\n  };\r\n  \r\n  export default cardHeaderStyle;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"./CardStyles/cardHeaderStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardHeader(props) {\r\n  const classes = useStyles();\r\n  const { className, children, color, plain, stats, icon, ...rest } = props;\r\n  const cardHeaderClasses = classNames({\r\n    [classes.cardHeader]: true,\r\n    [classes[color + \"CardHeader\"]]: color,\r\n    [classes.cardHeaderPlain]: plain,\r\n    [classes.cardHeaderStats]: stats,\r\n    [classes.cardHeaderIcon]: icon,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardHeaderClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\"\r\n  ]),\r\n  plain: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  icon: PropTypes.bool,\r\n  children: PropTypes.node\r\n};","const cardBodyStyle = {\r\n    cardBody: {\r\n      padding: \"0.9375rem 20px\",\r\n      flex: \"1 1 auto\",\r\n      WebkitBoxFlex: \"1\",\r\n      position: \"relative\"\r\n    },\r\n    cardBodyPlain: {\r\n      paddingLeft: \"5px\",\r\n      paddingRight: \"5px\"\r\n    },\r\n    cardBodyProfile: {\r\n      marginTop: \"15px\"\r\n    }\r\n  };\r\n  \r\n  export default cardBodyStyle;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"./CardStyles/cardBodyStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardBody(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, ...rest } = props;\r\n  const cardBodyClasses = classNames({\r\n    [classes.cardBody]: true,\r\n    [classes.cardBodyPlain]: plain,\r\n    [classes.cardBodyProfile]: profile,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardBodyClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardBody.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  children: PropTypes.node\r\n};","import { grayColor } from \"./material/material\";\r\n\r\nconst cardFooterStyle = {\r\n    cardFooter: {\r\n      padding: \"0\",\r\n      paddingTop: \"10px\",\r\n      margin: \"0 15px 10px\",\r\n      borderRadius: \"0\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      backgroundColor: \"transparent\",\r\n      border: \"0\"\r\n    },\r\n    cardFooterProfile: {\r\n      marginTop: \"-15px\"\r\n    },\r\n    cardFooterPlain: {\r\n      paddingLeft: \"5px\",\r\n      paddingRight: \"5px\",\r\n      backgroundColor: \"transparent\"\r\n    },\r\n    cardFooterStats: {\r\n      borderTop: \"1px solid \" + grayColor[10],\r\n      marginTop: \"20px\",\r\n      \"& svg\": {\r\n        position: \"relative\",\r\n        top: \"4px\",\r\n        marginRight: \"3px\",\r\n        marginLeft: \"3px\",\r\n        width: \"16px\",\r\n        height: \"16px\"\r\n      },\r\n      \"& .fab,& .fas,& .far,& .fal,& .material-icons\": {\r\n        fontSize: \"16px\",\r\n        position: \"relative\",\r\n        top: \"4px\",\r\n        marginRight: \"3px\",\r\n        marginLeft: \"3px\"\r\n      }\r\n    },\r\n    cardFooterChart: {\r\n      borderTop: \"1px solid \" + grayColor[10]\r\n    }\r\n  };\r\n  \r\n  export default cardFooterStyle;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"./CardStyles/cardFooterStyle\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CardFooter(props) {\r\n  const classes = useStyles();\r\n  const { className, children, plain, profile, stats, chart, ...rest } = props;\r\n  const cardFooterClasses = classNames({\r\n    [classes.cardFooter]: true,\r\n    [classes.cardFooterPlain]: plain,\r\n    [classes.cardFooterProfile]: profile,\r\n    [classes.cardFooterStats]: stats,\r\n    [classes.cardFooterChart]: chart,\r\n    [className]: className !== undefined\r\n  });\r\n  return (\r\n    <div className={cardFooterClasses} {...rest}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCardFooter.propTypes = {\r\n  className: PropTypes.string,\r\n  plain: PropTypes.bool,\r\n  profile: PropTypes.bool,\r\n  stats: PropTypes.bool,\r\n  chart: PropTypes.bool,\r\n  children: PropTypes.node\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridItem from \"./Grid/GridItem\";\r\nimport GridContainer from \"./Grid/GridContainer\";\r\nimport CustomInput from \"./CustomInput/CustomInput\";\r\nimport Card from \"./Card/Card\";\r\nimport CardHeader from \"./Card/CardHeader\";\r\nimport CardBody from \"./Card/CardBody\";\r\nimport CardFooter from \"./Card/CardFooter\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"src/localyStore\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n  cardHeaderColor: {\r\n    backgroundColor: \"rgb(61, 69, 63)\",\r\n  },\r\n  profile_info: {\r\n    flex: \"0.4\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function UserProfile() {\r\n  const classes = useStyles();\r\n  const { register } = useForm();\r\n  const { register: registerPasswordFrom } = useForm();\r\n  const user = useSelector(selectUser);\r\n\r\n  // const user = useSelector(state => state.auth.user)\r\n  /* \r\n    const showNotification = (place) => {\r\n      switch (place) {\r\n        case \"tr\":\r\n          if (!ok) {\r\n            setOK(true);\r\n            setTimeout(function () {\r\n              setOK(false);\r\n            }, 6000);\r\n          }\r\n          break;\r\n        case \"tc\":\r\n          if (!error) {\r\n            setError(true);\r\n            setTimeout(function () {\r\n              setError(false);\r\n            }, 6000);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }; */\r\n\r\n  /*   const onSubmitProfile = (data) => {\r\n      axios\r\n        .post(`${process.env.REACT_APP_SERVER}/Profile`, {\r\n          Email: data.Email,\r\n          NewUserName: data.NewUserName,\r\n          CurrentUserName: user?.preferred_username,\r\n        })\r\n        .then((res) => {\r\n          //update stored profile\r\n          user.email = res.data.email;\r\n          user.preferred_username = res.data.newUserName;       \r\n          \r\n          showNotification(\"tr\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          showNotification(\"tc\");\r\n        });\r\n    }; */\r\n\r\n  /*  const onSubmitPassword = (data, e) => {\r\n     axios\r\n       .post(`${process.env.REACT_APP_SERVER}/Password`, {\r\n           UserName: user?.data.email,\r\n         CurrentPassword: data.CurrentPassword,\r\n         NewPassword: data.NewPassword,\r\n       })\r\n       .then((res) => {\r\n         showNotification(\"tr\");\r\n         e.target.reset();\r\n       })\r\n       .catch((error) => {\r\n         console.log(error);\r\n         showNotification(\"tc\");\r\n       });\r\n   }; */\r\n\r\n  if (user) {\r\n    return (\r\n      <GridContainer\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"start\",\r\n          alignItems: \"start\",\r\n        }}\r\n      >\r\n        <div style={{ flex: \"0.6\" }} className=\"profile_change\">\r\n          <GridItem sm={12}>\r\n            <form\r\n            /* onSubmit={handleSubmit(onSubmitProfile)}\r\n            className={classes.form}\r\n            key={1} */\r\n            >\r\n              <Card>\r\n                <CardHeader style={styles.cardHeaderColor}>\r\n                  <h4 className={classes.cardTitleWhite}>Edit Profile</h4>\r\n                  <p className={classes.cardCategoryWhite}>User information</p>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div>\r\n                    <div xs={12} sm={12} md={6}>\r\n                      <CustomInput\r\n                        inputRef={register({ required: true })}\r\n                        labelText=\"Name\"\r\n                        id=\"NewUserName\"\r\n                        name=\"NewUserName\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          defaultValue: user?.name ?? \"admin\",\r\n                          type: \"text\",\r\n                          autoComplete: \"off\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div xs={12} sm={12} md={6}>\r\n                      <CustomInput\r\n                        inputRef={register({ required: true })}\r\n                        labelText=\"Email address\"\r\n                        id=\"Email\"\r\n                        name=\"Email\"\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          defaultValue: user?.email,\r\n                          type: \"text\",\r\n                          autoComplete: \"off\",\r\n                          disabled: \"true\",\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    style={{ width: \"200px\", margin: \"20px\" }}\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </form>\r\n          </GridItem>\r\n          <GridItem sm={12}>\r\n            <form\r\n            /* onSubmit={handleSubmitPasswordFrom(onSubmitPassword)}\r\n            className={classes.form}\r\n            key={2} */\r\n            >\r\n              <Card>\r\n                <CardHeader style={styles.cardHeaderColor}>\r\n                  <h4 className={classes.cardTitleWhite}>Change password</h4>\r\n                  <p className={classes.cardCategoryWhite}>Password</p>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div sm={12}>\r\n                    <CustomInput\r\n                      inputRef={registerPasswordFrom({ required: true })}\r\n                      labelText=\"Current Password\"\r\n                      id=\"CurrentPassword\"\r\n                      name=\"CurrentPassword\"\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        type: \"password\",\r\n                        autoComplete: \"off\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div sm={12}>\r\n                    <CustomInput\r\n                      inputRef={registerPasswordFrom({ required: true })}\r\n                      labelText=\"New Password\"\r\n                      id=\"NewPassword\"\r\n                      name=\"NewPassword\"\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        type: \"password\",\r\n                        autoComplete: \"off\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div sm={12}>\r\n                    <CustomInput\r\n                      input\r\n                      Ref={registerPasswordFrom({ required: true })}\r\n                      labelText=\"Confirm New Password\"\r\n                      id=\"ConfirmNewPassword\"\r\n                      name=\"ConfirmNewPassword\"\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        type: \"password\",\r\n                        autoComplete: \"off\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Change Password\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </form>\r\n          </GridItem>\r\n        </div>\r\n        <div style={styles.profile_info}>\r\n          <div>\r\n            <img\r\n              style={{ borderRadius: \"999px\" }}\r\n              src={\r\n                \"https://cdn.vox-cdn.com/thumbor/mXo5ObKpTbHYi9YslBy6YhfedT4=/95x601:1280x1460/1200x800/filters:focal(538x858:742x1062)/cdn.vox-cdn.com/uploads/chorus_image/image/66699060/mgidarccontentnick.comc008fa9d_d.0.png\"\r\n              }\r\n              alt=\"...\"\r\n              height=\"200\"\r\n              weight=\"200\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </GridContainer>\r\n    );\r\n  } else {\r\n    return <div>Unauthorized</div>;\r\n  }\r\n}\r\n"],"sourceRoot":""}