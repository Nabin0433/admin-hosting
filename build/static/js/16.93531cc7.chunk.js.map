{"version":3,"sources":["views/categories/ListCategories.js"],"names":["server","process","ListCategories","token","useSelector","selectUser","history","useHistory","useState","loading","setLoading","deleteModal","setDeleteModal","newCategoryModal","setNewCategoryModal","reload","setReload","newCategoriesName","setNewCategoriesName","newCategoriesIcon","setNewCategoriesIcon","newCategoriesIndex","setNewCategoriesIndex","newCategoriesType","setNewCategoriesType","seoTitle","setSeoTitle","seoDescription","setSeoDescription","seoAlt","setSeoAlt","event","setEvent","clearEvent","ms","setTimeout","data","setData","NewCategoryModalToggle","useEffect","axios","get","headers","Authorization","then","categories","catch","err","type","massage","response","message","className","onClick","style","float","color","variant","show","onClose","closeButton","onChange","e","target","value","name","placeholder","files","fileName","formData","FormData","append","post","res","tableFilter","items","fields","key","_classes","label","hover","striped","itemsPerPage","scopedSlots","SN","_","index","icon","item","width","src","categoryIcon","img","alt","Action","push","_id","delete"],"mappings":"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","file":"static/js/16.93531cc7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Categories.css\";\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalFooter,\r\n  CModalBody,\r\n  CCardTitle,\r\n  CCardBody,\r\n  CDataTable,\r\n  CInput,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../localyStore\";\r\nimport axios from \"axios\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst server = process.env.REACT_APP_SERVER;\r\n\r\nconst ListCategories = () => {\r\n  // Admin token\r\n  const { token } = useSelector(selectUser);\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(true);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [newCategoryModal, setNewCategoryModal] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  // new\r\n  const [newCategoriesName, setNewCategoriesName] = useState(\"\");\r\n  const [newCategoriesIcon, setNewCategoriesIcon] = useState(\"\");\r\n  const [newCategoriesIndex, setNewCategoriesIndex] = useState(1);\r\n  const [newCategoriesType, setNewCategoriesType] = useState(\"\");\r\n  const [seoTitle, setSeoTitle] = useState(\"\");\r\n  const [seoDescription, setSeoDescription] = useState(\"\");\r\n  const [seoAlt, setSeoAlt] = useState(\"\");\r\n\r\n  // alert\r\n  const [event, setEvent] = useState(null);\r\n\r\n  const clearEvent = (ms) => {\r\n    setTimeout(() => {\r\n      setEvent(null);\r\n    }, ms);\r\n  };\r\n  // set Tables\r\n  const [data, setData] = useState(null);\r\n  // toogke for new category\r\n  const NewCategoryModalToggle = () => {\r\n    setNewCategoryModal(!newCategoryModal);\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(server + process.env.REACT_APP_ADMIN_All_CATEGORY_GET, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((data) => {\r\n        setData(data.data.categories);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setEvent({\r\n          type: \"error\",\r\n          massage:\r\n            err?.response?.data.message ?? \"error on server back-end server\",\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  }, [reload, token]);\r\n\r\n  // submit new categories\r\n  const confirmDeleteCategories = () => {\r\n    axios\r\n      .delete(server + \"/api/categorys/delete/\" + deleteModal, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setDeleteModal(false);\r\n        setReload(!reload);\r\n        setEvent({\r\n          type: \"success\",\r\n          massage: res.data.message,\r\n        });\r\n        clearEvent(5000);\r\n      })\r\n      .catch((err) => {\r\n        setDeleteModal(false);\r\n        setEvent({\r\n          type: \"error\",\r\n          massage: err.response.data.message,\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  };\r\n\r\n  // new // addnew category\r\n  const addNewCategories = () => {\r\n    if (\r\n      !newCategoriesName ||\r\n      !newCategoriesIcon ||\r\n      !newCategoriesIndex ||\r\n      !seoTitle ||\r\n      !seoDescription ||\r\n      !seoAlt\r\n    ) {\r\n      setEvent({\r\n        type: \"warn\",\r\n        massage: \"require all feilds\",\r\n      });\r\n      clearEvent(5000);\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"name\", newCategoriesName);\r\n    formData.append(\"parentId\", \"\");\r\n    formData.append(\"identity\", \"\");\r\n    formData.append(\"index\", newCategoriesIndex ?? 0);\r\n    formData.append(\"categoryIcon\", newCategoriesIcon);\r\n    formData.append(\"type\", newCategoriesType ? newCategoriesType : \"list\");\r\n    formData.append(\"seoTitle\", seoTitle);\r\n    formData.append(\"seoDescription\", seoDescription);\r\n    formData.append(\"seoAlt\", seoAlt);\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_SERVER +\r\n          process.env.REACT_APP_ADMIN_CATEGORY_POST,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setNewCategoriesName(\"\");\r\n        setNewCategoriesIndex(\"\");\r\n        setSeoDescription(\"\");\r\n        setNewCategoriesType(\"\");\r\n        setSeoTitle(\"\");\r\n        setSeoAlt(\"\");\r\n        setReload(!reload);\r\n        setNewCategoryModal(false);\r\n        setEvent({\r\n          type: \"success\",\r\n          massage: res.data.message,\r\n        });\r\n        clearEvent(5000);\r\n      })\r\n      .catch((err) => {\r\n        setEvent({\r\n          type: \"error\",\r\n          massage: err.response.data.message,\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CCardTitle className=\"p-1\">\r\n      <p>Manage Category</p>\r\n      <CButton\r\n        onClick={NewCategoryModalToggle}\r\n        style={{ float: \"right\" }}\r\n        color=\"success\"\r\n        variant=\"outline\"\r\n      >\r\n        New Category\r\n      </CButton>\r\n      <CModal show={newCategoryModal} onClose={NewCategoryModalToggle}>\r\n        <CModalHeader closeButton>New Category</CModalHeader>\r\n        <CModalBody>\r\n          <h6>Category name :</h6>\r\n          <CInput\r\n            onChange={(e) => setNewCategoriesName(e.target.value)}\r\n            value={newCategoriesName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter New Categories\"\r\n          />\r\n          <h6 className=\"mt-3\">Category index :</h6>\r\n          <CInput\r\n            onChange={(e) => setNewCategoriesIndex(e.target.value)}\r\n            value={newCategoriesIndex}\r\n            type=\"number\"\r\n            name=\"index\"\r\n            placeholder=\"index\"\r\n          />\r\n          <h6 className=\"mt-3\">Category SEO Title :</h6>\r\n          <CInput\r\n            onChange={(e) => setSeoTitle(e.target.value)}\r\n            value={seoTitle}\r\n            type=\"text\"\r\n            name=\"seoDescription\"\r\n            placeholder=\"seoTitle\"\r\n          />\r\n          <h6 className=\"mt-3\">Category SEO Description :</h6>\r\n          <CInput\r\n            onChange={(e) => setSeoDescription(e.target.value)}\r\n            value={seoDescription}\r\n            type=\"text\"\r\n            name=\"seoDescription\"\r\n            placeholder=\"seoDescription\"\r\n          />\r\n          <h6 className=\"mt-3\">Category SEO Alt {\"(for icon Seo)\"} :</h6>\r\n          <CInput\r\n            onChange={(e) => setSeoAlt(e.target.value)}\r\n            value={seoAlt}\r\n            type=\"text\"\r\n            name=\"seoAlt\"\r\n            placeholder=\"seoAlt\"\r\n          />\r\n          <h6 className=\"mt-3\">Icon :</h6>\r\n          <CInput\r\n            onChange={(e) => setNewCategoriesIcon(e.target.files[0])}\r\n            type=\"file\"\r\n            name=\"Icon\"\r\n            value={newCategoriesIcon?.fileName}\r\n          />\r\n          <br />\r\n          {event?.type === \"warn\" && (\r\n            <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n              <CAlert color=\"danger\">{event.massage}</CAlert>\r\n            </div>\r\n          )}\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton onClick={addNewCategories} color=\"primary\">\r\n            Add\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {/* end new */}\r\n      <CCardBody>\r\n        <CDataTable\r\n          tableFilter\r\n          items={data}\r\n          fields={[\r\n            \"SN\",\r\n            \"icon\",\r\n            { key: \"name\", _classes: \"\" },\r\n            { key: \"Action\", label: \"\" },\r\n          ]}\r\n          hover\r\n          striped\r\n          loading={loading}\r\n          itemsPerPage={20}\r\n          scopedSlots={{\r\n            SN: (_, index) => <td>{index + 1}</td>,\r\n            icon: (item, index) => (\r\n              <td>\r\n                <img\r\n                  key={index}\r\n                  width=\"40\"\r\n                  src={item.categoryIcon[0]?.img}\r\n                  alt=\"icon\"\r\n                />\r\n              </td>\r\n            ),\r\n            Action: (item) => (\r\n              <>\r\n                <td\r\n                  className=\"delete_color text-center\"\r\n                  onClick={() => {\r\n                    history.push(\"/categoriesList/\" + item._id);\r\n                  }}\r\n                >\r\n                  <CreateIcon />\r\n                </td>\r\n                <td\r\n                  className=\"delete_red_color\"\r\n                  onClick={() => setDeleteModal(item._id)}\r\n                >\r\n                  <DeleteForeverIcon />\r\n                </td>\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      </CCardBody>\r\n      <CModal\r\n        className=\"sm-30\"\r\n        show={deleteModal}\r\n        onClose={() => setDeleteModal(false)}\r\n      >\r\n        <CModalHeader closeButton>Delete Category</CModalHeader>\r\n        <CModalBody>Do you want to remove this category ?</CModalBody>\r\n        <CModalFooter>\r\n          <CButton onClick={confirmDeleteCategories} color=\"primary\">\r\n            Yes\r\n          </CButton>\r\n          <CButton onClick={() => setDeleteModal(false)} color=\"primary\">\r\n            No\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {event?.type === \"error\" && (\r\n        <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n          <CAlert color=\"danger\">{event.massage}</CAlert>\r\n        </div>\r\n      )}\r\n      {event?.type === \"success\" && (\r\n        <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n          <CAlert color=\"success\">{event.massage}</CAlert>\r\n        </div>\r\n      )}\r\n    </CCardTitle>\r\n  );\r\n};\r\n\r\nexport default ListCategories;\r\n"],"sourceRoot":""}