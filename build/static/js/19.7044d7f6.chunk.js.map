{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/Manufacturer/manufacturers.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","Vender","useState","vendersData","setVendersData","token","useSelector","selectUser","history","useHistory","modal","setModal","useEffect","axios","get","process","headers","Authorization","then","data","vendor","catch","console","log","toggle","xl","onClick","color","items","fields","key","_classes","hover","itemsPerPage","pagination","clickableRows","onRowClick","item","push","_id","scopedSlots","registered","updatedAt","Logo","className","src","imageLogo","alt","show","onClose","closeButton","onSubmit","preventDefault","target","formData","FormData","append","title","email","phone","Url","img","files","post","alert","class","for","required","name","type","placeholder","id","accept"],"mappings":"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","file":"static/js/19.7044d7f6.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Vendor.css\";\r\nimport { selectUser } from \"src/localyStore\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CModalHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\n\r\nconst Vender = () => {\r\n  const [vendersData, setVendersData] = useState(null);\r\n  const { token } = useSelector(selectUser);\r\n\r\n  const history = useHistory();\r\n  const [modal, setModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SERVER + \"/api/vendor/get-vendor-details\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((data) => {\r\n        setVendersData(data.data.vendor);\r\n        // console.log(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [token, modal]);\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const vendorCreate = (e) => {\r\n    e.preventDefault();\r\n    const data = e.target;\r\n    const formData = new FormData();\r\n    formData.append(\"name\", data.title.value);\r\n    formData.append(\"email\", data.email.value);\r\n    formData.append(\"phone\", data.phone.value);\r\n    formData.append(\"url\", data.Url.value);\r\n    formData.append(\"vendorImageLogo\", data.img.files[0]);\r\n    for (const [key, value] of formData) {\r\n      console.log(`${key}: ${value}`);\r\n    }\r\n    axios\r\n      .post(process.env.REACT_APP_SERVER + \"/api/vendor/add-vendor\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        toggle();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        alert(\"error on  create\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>Vendors</CCardHeader>\r\n          <CCardBody>\r\n            <CButton onClick={toggle} color=\"success\">\r\n              Add New Vendors\r\n            </CButton>\r\n            <CDataTable\r\n              items={vendersData}\r\n              fields={[\r\n                { key: \"name\", _classes: \"font-weight-bold\" },\r\n                \"phone\",\r\n                \"registered\",\r\n                \"url\",\r\n                \"Logo\",\r\n              ]}\r\n              hover\r\n              itemsPerPage={50}\r\n              pagination\r\n              clickableRows\r\n              onRowClick={(item) => history.push(`/vendor/${item._id}`)}\r\n              scopedSlots={{\r\n                registered: (item) => <td>{item.updatedAt}</td>,\r\n                Logo: (item) => (\r\n                  <img\r\n                    className=\"vender_logo\"\r\n                    src={item.imageLogo}\r\n                    alt=\"Logo\"\r\n                  />\r\n                ),\r\n              }}\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CModal show={modal} onClose={toggle}>\r\n        <CModalHeader closeButton>Add new Vendor</CModalHeader>\r\n        <CModalBody>\r\n          <form onSubmit={vendorCreate}>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">Vendor Name : </label>\r\n              <input\r\n                required\r\n                name=\"title\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Vendor Name\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">Vendor Email : </label>\r\n              <input\r\n                required\r\n                name=\"email\"\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Vendor Email\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">Vendor URL : </label>\r\n              <input\r\n                required\r\n                name=\"Url\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Vendor URL\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"exampleFormControlTextarea1\">\r\n                Vendor Phone No. :{\" \"}\r\n              </label>\r\n              <input\r\n                required\r\n                name=\"phone\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                placeholder=\"Vendor Phone NO.\"\r\n              />\r\n            </div>\r\n            <div class=\"input-group mb-3 p-1\">\r\n              <div class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n                  Upload\r\n                </span>\r\n              </div>\r\n              <div class=\"custom-file\">\r\n                <input\r\n                  required\r\n                  name=\"img\"\r\n                  type=\"file\"\r\n                  accept=\"image/png, image/jpeg,image/jpg,image/svg,image/webp\"\r\n                  class=\"custom-file-input\"\r\n                  id=\"inputGroupFile01\"\r\n                  aria-describedby=\"inputGroupFileAddon01\"\r\n                />\r\n                <label class=\"custom-file-label\" for=\"inputGroupFile01\">\r\n                  Vendor Logo\r\n                </label>\r\n              </div>\r\n            </div>{\" \"}\r\n            <CModalFooter>\r\n              <CButton type=\"submit\" color=\"primary\">\r\n                Confirm\r\n              </CButton>\r\n            </CModalFooter>\r\n          </form>\r\n        </CModalBody>\r\n      </CModal>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Vender;\r\n"],"sourceRoot":""}