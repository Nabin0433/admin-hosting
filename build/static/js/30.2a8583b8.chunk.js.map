{"version":3,"sources":["views/notifications/badges/Badges.js","views/notifications/Notification.js"],"names":["Badges","useState","userType","setUserType","title","setTitile","message","setMessage","img","setImg","event","setEvent","clearEvent","ms","setTimeout","xs","md","color","className","defaultValue","size","onChange","e","target","value","TextField","id","label","variant","cols","rows","placeholder","disabled","type","onClick","axios","post","included_segments","app_id","process","channel_for_external_user_ids","data","foo","contents","en","headings","url","big_picture","headers","Authorization","then","res","massage","catch","err","class","Notifiaction"],"mappings":"sPA0JeA,EA5IA,WACb,MAAgCC,mBAAS,oBAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsBN,mBAAS,IAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KAGA,EAA0BR,mBAAS,MAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEMC,EAAa,SAACC,GAClBC,YAAW,WACTH,EAAS,QACRE,IA0CL,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAME,GAAG,KAAKC,GAAG,IAAjB,UACE,oBAAGC,MAAM,YAAT,0BAAmC,MACnC,eAAC,IAAD,WACE,cAAC,IAAD,CAAaC,UAAU,GAAvB,SACE,uEAEF,eAAC,IAAD,WACE,qBAAKA,UAAU,4BAAf,SACE,iDAEF,yBACEC,aAAcjB,EACdkB,KAAK,KACLF,UAAU,WACV,aAAW,gBACXG,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAEC,OAAOC,QALxC,UAOE,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,mBAAd,iCAEF,gCACE,qBAAKN,UAAU,4BAAf,SACE,8CAEF,cAACO,EAAA,EAAD,CACEC,GAAG,GACHC,MAAM,WACNH,MAAOhB,EACPoB,QAAQ,WACRP,SAAU,SAACC,GAAD,OAAOb,EAAOa,EAAEC,OAAOC,aAGrC,gCACE,qBAAKN,UAAU,4BAAf,SACE,6CAEF,cAACO,EAAA,EAAD,CACEC,GAAG,4BACHC,MAAM,aACNH,MAAOpB,EACPwB,QAAQ,WACRP,SAAU,SAACC,GAAD,OAAOjB,EAAUiB,EAAEC,OAAOC,aAGxC,gCACE,qBAAKN,UAAU,4BAAf,SACE,oDAEF,0BACEW,KAAK,KACLC,KAAK,IACLC,YAAY,gBACZP,MAAOlB,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAWe,EAAEC,OAAOC,aAGzC,uBACA,wBACEQ,UAAW5B,IAAUE,EACrB2B,KAAK,SACLC,QAtGa,WACvBC,IACGC,KACC,6CACA,CACEC,kBAAmB,CAACnC,GACpBoC,OAAQC,uCACRC,8BAA+B,OAC/BC,KAAM,CAAEC,IAAKpC,GACbqC,SAAU,CAAEC,GAAItC,GAChBuC,SAAU,CAAED,GAAIxC,GAChB0C,IAAK,2BACLC,YAAavC,GAGf,CACEwC,QAAS,CACPC,cAAe,4DAIpBC,MAAK,SAACC,GACLxC,EAAS,CACPsB,KAAM,UACNmB,QAAS,iDAEXxC,EAAW,KACXP,EAAU,IACVE,EAAW,OAEZ8C,OAAM,SAACC,GACN3C,EAAS,CACPsB,KAAM,QACNmB,QAAS,+BAEXxC,EAAW,SAoEL2C,MAAM,yBAJR,uBASF,cAAC,IAAD,UAGa,WAAX,OAAL7C,QAAK,IAALA,OAAA,EAAAA,EAAOuB,OACN,qBAAKf,UAAU,yDAAf,SACE,cAAC,IAAD,CAAQD,MAAM,SAAd,SAAwBP,EAAM0C,YAGjB,aAAX,OAAL1C,QAAK,IAALA,OAAA,EAAAA,EAAOuB,OACN,qBAAKf,UAAU,yDAAf,SACE,cAAC,IAAD,CAAQD,MAAM,UAAd,SAAyBP,EAAM0C,gBCzI1BI,UARf,WACE,OACE,8BACE,cAAC,EAAD","file":"static/js/30.2a8583b8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\n// import Select from \"react-select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\n\r\nconst Badges = () => {\r\n  const [userType, setUserType] = useState(\"Subscribed Users\");\r\n  const [title, setTitile] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [img, setImg] = useState(\"\");\r\n\r\n  // alert\r\n  const [event, setEvent] = useState(null);\r\n\r\n  const clearEvent = (ms) => {\r\n    setTimeout(() => {\r\n      setEvent(null);\r\n    }, ms);\r\n  };\r\n\r\n  const sendNotification = () => {\r\n    axios\r\n      .post(\r\n        \"https://onesignal.com/api/v1/notifications\",\r\n        {\r\n          included_segments: [userType],\r\n          app_id: process.env.REACT_APP_ONESIGNAL_ID,\r\n          channel_for_external_user_ids: \"push\",\r\n          data: { foo: message },\r\n          contents: { en: message },\r\n          headings: { en: title },\r\n          url: \"http://ultimodeal.com.np\",\r\n          big_picture: img,\r\n          // buttons: [{ id: \"123\", text: \"first button\", icon: \"avatars/1.jpg\" }],\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Basic \" + process.env.REACT_APP_ONESIGNAL_TOKEN,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setEvent({\r\n          type: \"success\",\r\n          massage: \"Notification has been delevered to all users\",\r\n        });\r\n        clearEvent(5000);\r\n        setTitile(\"\");\r\n        setMessage(\"\");\r\n      })\r\n      .catch((err) => {\r\n        setEvent({\r\n          type: \"error\",\r\n          massage: \"error on Push notification\",\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xs=\"13\" md=\"6\">\r\n        <p color=\"secondary\">Notifications{\"\"}</p>\r\n        <CCard>\r\n          <CCardHeader className=\"\">\r\n            <h2>Select Device and Push Notification</h2>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <div className=\"attribute-form my-4 ml-12\">\r\n              <h3>Select Device</h3>\r\n            </div>\r\n            <select\r\n              defaultValue={userType}\r\n              size=\"sm\"\r\n              className=\"mb-2 p-2\"\r\n              aria-label=\"Select Device\"\r\n              onChange={(e) => setUserType(e.target.value)}\r\n            >\r\n              <option value=\"Active Users\">Active Users</option>\r\n              <option value=\"Inactive Users\">Inactive Users</option>\r\n              <option value=\"Subscribed Users\">Subscribed Users</option>\r\n            </select>\r\n            <div>\r\n              <div className=\"attribute-form my-3 ml-12\">\r\n                <h3>Set Images</h3>\r\n              </div>\r\n              <TextField\r\n                id=\"\"\r\n                label=\"Your img\"\r\n                value={img}\r\n                variant=\"outlined\"\r\n                onChange={(e) => setImg(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"attribute-form my-3 ml-12\">\r\n                <h3>Set Title</h3>\r\n              </div>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Your Title\"\r\n                value={title}\r\n                variant=\"outlined\"\r\n                onChange={(e) => setTitile(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"attribute-form my-3 ml-12\">\r\n                <h3>Set Notification</h3>\r\n              </div>\r\n              <textarea\r\n                cols=\"50\"\r\n                rows=\"4\"\r\n                placeholder=\"Enter Message\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <br></br>\r\n            <button\r\n              disabled={!title || !message}\r\n              type=\"button\"\r\n              onClick={sendNotification}\r\n              class=\"btn btn-primary btn-lg\"\r\n            >\r\n              Sumbit\r\n            </button>\r\n          </CCardBody>\r\n          <CCardFooter></CCardFooter>\r\n        </CCard>\r\n      </CCol>\r\n      {event?.type === \"error\" && (\r\n        <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n          <CAlert color=\"danger\">{event.massage}</CAlert>\r\n        </div>\r\n      )}\r\n      {event?.type === \"success\" && (\r\n        <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n          <CAlert color=\"success\">{event.massage}</CAlert>\r\n        </div>\r\n      )}\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Badges;\r\n","import React from \"react\";\r\nimport Badges from \"./badges/Badges\";\r\nfunction Notifiaction() {\r\n  return (\r\n    <div>\r\n      <Badges />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifiaction;\r\n"],"sourceRoot":""}