{"version":3,"sources":["views/product/productLists.js"],"names":["ProductLists","history","useHistory","userId","useSelector","state","user","_id","selectUser","role","token","useState","loading","setLoading","offersShow","setOffersShow","offers","setOffers","flashSale","setFlashSale","selectedOffer","setSelectedOffer","discount","setDiscount","products","setProducts","vendorProducts","setvendorProducts","vendorProductsPending","setVendorProductsPending","server","process","reload","setReload","event","setEvent","clearEvent","ms","setTimeout","useEffect","getProduct","axios","get","headers","Authorization","then","res","data","catch","err","type","massage","response","message","flashSales","dataChange","vendorProductPending","feilds","newData","map","i","ProductImg","productPictures","img","name","price","Math","round","quantity","discountPrice","finalPrice","slug","sku","sku_number","category","sub2Category","sub1Category","mainCategory","verifiedVendors","toggle","offer","product","key","label","_style","width","sorter","filter","className","xl","onChange","e","target","value","vendorProductApproved","tableFilter","columnFilter","pagination","itemsPerPageSelect","items","fields","hover","striped","itemsPerPage","scopedSlots","item","index","src","alt","content","freeSet","cilGift","size","onClick","offerTitle","flashSalesTitle","Action","push","id","delete","show","onClose","closeButton","htmlFor","disabled","min","max","color","api","REACT_APP_ADMIN_PUSH_OFFER","post","offerId"],"mappings":"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","file":"static/js/33.57c560ee.chunk.js","sourcesContent":["import CIcon from \"@coreui/icons-react\";\r\nimport { freeSet } from \"@coreui/icons\";\r\n\r\nimport {\r\n  CCol,\r\n  CRow,\r\n  CCard,\r\n  CCardTitle,\r\n  CCardBody,\r\n  CDataTable,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CButton,\r\n  CCardHeader,\r\n  CAlert,\r\n} from \"@coreui/react\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../../localyStore\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./product.css\";\r\n\r\nconst ProductLists = () => {\r\n  const history = useHistory();\r\n\r\n  const userId = useSelector((state) => state.user._id);\r\n  const { role, token } = useSelector(selectUser);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [offersShow, setOffersShow] = useState(false);\r\n  const [offers, setOffers] = useState([]);\r\n  const [flashSale, setFlashSale] = useState([]);\r\n  const [selectedOffer, setSelectedOffer] = useState(null);\r\n  const [discount, setDiscount] = useState(1);\r\n\r\n  const [products, setProducts] = useState();\r\n  const [vendorProducts, setvendorProducts] = useState();\r\n  const [vendorProductsPending, setVendorProductsPending] = useState(\"pending\");\r\n\r\n  const server = process.env.REACT_APP_SERVER;\r\n  const [reload, setReload] = useState(null);\r\n\r\n  // alert\r\n  const [event, setEvent] = useState(null);\r\n\r\n  const clearEvent = (ms) => {\r\n    setTimeout(() => {\r\n      setEvent(null);\r\n    }, ms);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let getProduct;\r\n    if (role === \"admin\") {\r\n      getProduct = process.env.REACT_APP_ADMIN_PRODUCT_LIST_GET;\r\n      axios\r\n        .get(server + process.env.REACT_APP_ADMIN_GET_OFFERS, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setOffers(res.data.offers);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          setEvent({\r\n            type: \"error\",\r\n            massage: err?.response?.data.message ?? \"server-error\",\r\n          });\r\n          clearEvent(5000);\r\n        });\r\n      axios\r\n        .get(server + process.env.REACT_APP_ADMIN_GET_FLASH_SALE, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setFlashSale(res.data.flashSales[0]);\r\n        })\r\n        .catch((err) => {\r\n          setEvent({\r\n            type: \"error\",\r\n            massage: err?.response?.data.message ?? \"server-error\",\r\n          });\r\n          clearEvent(5000);\r\n        });\r\n    }\r\n    if (role === \"vendor\") {\r\n      getProduct = process.env.REACT_APP_ADMIN_PRODUCT_VENDOR_LIST_GET;\r\n    }\r\n    axios\r\n      .get(server + getProduct, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (role === \"admin\") {\r\n          dataChange(res?.data.products);\r\n        }\r\n        if (role === \"vendor\") {\r\n          dataChange(res?.data.vendorProductPending);\r\n          setvendorProducts(res.data);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setEvent({\r\n          type: \"error\",\r\n          massage: err?.response?.data.message ?? \"server-error\",\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  }, [token, role, userId, reload]);\r\n  // change data\r\n  const dataChange = (data) => {\r\n    let newData = data.map((i) => ({\r\n      _id: i._id,\r\n      ProductImg: i.productPictures?.[0]?.img,\r\n      name: i.name,\r\n      price: Math.round(i.price),\r\n      quantity: Math.round(i.quantity),\r\n      discountPrice: Math.round(i.discountPrice),\r\n      finalPrice: Math.round(i.finalPrice),\r\n      slug: i.slug,\r\n      sku: i.sku_number,\r\n      category:\r\n        i.sub2Category?.name || i.sub1Category?.name || i.mainCategory?.name,\r\n      verifiedVendors: i?.verifiedVendors?.name ?? \"Admin\",\r\n    }));\r\n    setProducts(newData);\r\n  };\r\n  // delete products\r\n  const deleteProduct = (id) => {\r\n    axios\r\n      .delete(server + process.env.REACT_APP_ADMIN_PRODUCT_DELETE + id, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setEvent({\r\n          type: \"success\",\r\n          massage: res.data.message,\r\n        });\r\n        clearEvent(5000);\r\n        setReload(!reload);\r\n      })\r\n      .catch((err) => {\r\n        setEvent({\r\n          type: \"error\",\r\n          massage: err.response.data.message,\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  };\r\n  // toggle modal\r\n  const toggle = (offer = null, product = null) => {\r\n    setOffersShow(!offersShow);\r\n    setSelectedOffer({ ...offer, product });\r\n  };\r\n\r\n  // add products to offers\r\n  const addProductToOffers = () => {\r\n    let api;\r\n    if (selectedOffer.flashSalesTitle) {\r\n      api = process.env.REACT_APP_ADMIN_ADD_PRODUCT_FLASH_SALE;\r\n    } else {\r\n      api = process.env.REACT_APP_ADMIN_PUSH_OFFER;\r\n    }\r\n    axios\r\n      .post(\r\n        server + api,\r\n        {\r\n          offerId: selectedOffer._id,\r\n          product: selectedOffer.product._id,\r\n          discount,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setEvent({\r\n          type: \"success\",\r\n          massage: res.data.message,\r\n        });\r\n        clearEvent(8000);\r\n        toggle();\r\n        setDiscount(1);\r\n        setSelectedOffer(null);\r\n      })\r\n      .catch((err) => {\r\n        toggle();\r\n        setEvent({\r\n          type: \"error\",\r\n          massage: err.response.data.message,\r\n        });\r\n        clearEvent(5000);\r\n      });\r\n  };\r\n  // add products to flashSale \r\n  // not\r\n  // const addProductToFlashSale = () => {\r\n  //   axios\r\n  //     .post(\r\n  //       server + process.env.REACT_APP_ADMIN_ADD_PRODUCT_FLASH_SALE,\r\n  //       {\r\n  //         offerId: selectedOffer._id,\r\n  //         product: selectedOffer.product._id,\r\n  //         discount,\r\n  //       },\r\n  //       {\r\n  //         headers: {\r\n  //           Authorization: `Bearer ${token}`,\r\n  //         },\r\n  //       }\r\n  //     )\r\n  //     .then((res) => {\r\n  //       setEvent({\r\n  //         type: \"success\",\r\n  //         massage: res.data.message,\r\n  //       });\r\n  //       clearEvent(8000);\r\n  //       toggle();\r\n  //       setDiscount(1);\r\n  //       setSelectedOffer(null);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       toggle();\r\n  //       setEvent({\r\n  //         type: \"error\",\r\n  //         massage: err.response.data.message,\r\n  //       });\r\n  //       clearEvent(5000);\r\n  //     });\r\n  // };\r\n  let feilds;\r\n  if (role === \"admin\") {\r\n    feilds = [\r\n      {\r\n        key: \"sku\",\r\n        label: \"SKU\",\r\n        _style: { width: \"9%\" },\r\n        sorter: false,\r\n        filter: true,\r\n      },\r\n      {\r\n        key: \"ProductImg\",\r\n        label: \"Image\",\r\n        sorter: false,\r\n        filter: false,\r\n      },\r\n      {\r\n        key: \"slug\",\r\n        label: \"Name\",\r\n        sorter: true,\r\n        filter: true,\r\n      },\r\n      \"price\",\r\n      \"discountPrice\",\r\n      \"finalPrice\",\r\n      \"category\",\r\n      \"quantity\",\r\n      {\r\n        key: \"verifiedVendors\",\r\n        label: \"Vendor\",\r\n        _style: { width: \"6%\" },\r\n        sorter: true,\r\n        filter: true,\r\n      },\r\n      {\r\n        key: \"offers\",\r\n        label: \"Offer\",\r\n        _style: { width: \"6%\" },\r\n        sorter: false,\r\n        filter: false,\r\n      },\r\n      {\r\n        key: \"Action\",\r\n        label: \"\",\r\n        _style: { width: \"6%\" },\r\n        sorter: false,\r\n        filter: false,\r\n      },\r\n    ];\r\n  }\r\n  if (role === \"vendor\") {\r\n    if (vendorProductsPending === \"pending\") {\r\n      feilds = [\r\n        {\r\n          key: \"sku\",\r\n          label: \"SKU\",\r\n          _style: { width: \"9%\" },\r\n          sorter: false,\r\n          filter: true,\r\n        },\r\n        {\r\n          key: \"ProductImg\",\r\n          label: \"Image\",\r\n          sorter: false,\r\n          filter: false,\r\n        },\r\n        {\r\n          key: \"slug\",\r\n          label: \"Name\",\r\n          sorter: true,\r\n          filter: true,\r\n        },\r\n        \"price\",\r\n        \"category\",\r\n        \"quantity\",\r\n        {\r\n          key: \"Action\",\r\n          label: \"\",\r\n          _style: { width: \"6%\" },\r\n          sorter: false,\r\n          filter: false,\r\n        },\r\n      ];\r\n    } else {\r\n      feilds = [\r\n        {\r\n          key: \"sku\",\r\n          label: \"SKU\",\r\n          _style: { width: \"9%\" },\r\n          sorter: false,\r\n          filter: true,\r\n        },\r\n        {\r\n          key: \"ProductImg\",\r\n          label: \"Image\",\r\n          sorter: false,\r\n          filter: false,\r\n        },\r\n        {\r\n          key: \"slug\",\r\n          label: \"Name\",\r\n          sorter: true,\r\n          filter: true,\r\n        },\r\n        \"price\",\r\n        \"category\",\r\n        \"quantity\",\r\n      ];\r\n    }\r\n  }\r\n  // vendor only change product type\r\n  const changeTypeProduct = (e) => {\r\n    setVendorProductsPending(e.target.value);\r\n    if (e.target.value === \"pending\") {\r\n      dataChange(vendorProducts.vendorProductPending);\r\n    } else {\r\n      dataChange(vendorProducts.vendorProductApproved);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"productlist\">\r\n      <CRow>\r\n        <CCol xl={12}>\r\n          <CCard>\r\n            {role === \"vendor\" && (\r\n              <CCardHeader>\r\n                <select onChange={changeTypeProduct}>\r\n                  <option value=\"pending\">Pending</option>\r\n                  <option value=\"approved\">Approved</option>\r\n                </select>\r\n              </CCardHeader>\r\n            )}\r\n            <CCardTitle className=\"text-center mt-4\">\r\n              {role === \"admin\"\r\n                ? \"Product Lists\"\r\n                : vendorProductsPending === \"pending\"\r\n                ? \"Pending Products\"\r\n                : \"Approved Products\"}\r\n            </CCardTitle>\r\n            <CCardBody>\r\n              <CDataTable\r\n                tableFilter\r\n                columnFilter\r\n                sorter\r\n                pagination\r\n                itemsPerPageSelect\r\n                loading={loading}\r\n                items={products}\r\n                fields={feilds}\r\n                hover\r\n                striped\r\n                itemsPerPage={10}\r\n                // onRowClick={(item) => history.push(`/product/${item._id}`)}\r\n                scopedSlots={{\r\n                  \"SiNo.\": (item, index) => <td key={index}>{index + 1}</td>,\r\n                  ProductImg: (item) => (\r\n                    <td>\r\n                      <img\r\n                        className=\"productlist_img\"\r\n                        loading=\"lazy\"\r\n                        src={item.ProductImg}\r\n                        alt={item.name}\r\n                      />\r\n                    </td>\r\n                  ),\r\n                  offers: (item) => (\r\n                    <td>\r\n                      <CDropdown>\r\n                        <CDropdownToggle>\r\n                          <CIcon content={freeSet.cilGift} size=\"2xl\" />\r\n                        </CDropdownToggle>\r\n                        <CDropdownMenu>\r\n                          <h5 className=\"center my-2\">Add Offres</h5>\r\n                          {offers?.map((offers) => (\r\n                            <CDropdownItem\r\n                              key={offers._id}\r\n                              onClick={() => toggle(offers, item)}\r\n                            >\r\n                              {offers.offerTitle}\r\n                            </CDropdownItem>\r\n                          ))}\r\n                          <h5 className=\"center my-2\">Add FlashSale</h5>\r\n                          {flashSale && (\r\n                            <CDropdownItem\r\n                              key={flashSale?._id}\r\n                              onClick={() =>\r\n                                toggle(\r\n                                  {\r\n                                    ...flashSale,\r\n                                    offerTitle: flashSale?.flashSalesTitle,\r\n                                  },\r\n                                  item\r\n                                )\r\n                              }\r\n                            >\r\n                              {flashSale.flashSalesTitle}\r\n                            </CDropdownItem>\r\n                          )}\r\n                        </CDropdownMenu>\r\n                      </CDropdown>\r\n                    </td>\r\n                  ),\r\n                  Action: (item) => (\r\n                    <td>\r\n                      <CDropdown>\r\n                        <CDropdownToggle>\r\n                          <CIcon name=\"cilSettings\" size=\"2xl\" />\r\n                        </CDropdownToggle>\r\n                        <CDropdownMenu>\r\n                          <CDropdownItem\r\n                            onClick={() =>\r\n                              history.push(`/productlist/${item._id}`)\r\n                            }\r\n                          >\r\n                            <NoteAddIcon /> Edit\r\n                          </CDropdownItem>\r\n                          <CDropdownItem\r\n                            onClick={() => deleteProduct(item._id)}\r\n                          >\r\n                            <DeleteForeverIcon /> Delete\r\n                          </CDropdownItem>\r\n                        </CDropdownMenu>\r\n                      </CDropdown>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CModal className=\"sm-30\" show={offersShow} onClose={toggle}>\r\n        <CModalHeader closeButton>\r\n          Add {selectedOffer?.product?.name} To {selectedOffer?.offerTitle}\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlFile2\">Offer Title</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"offerTitle\"\r\n              id=\"exampleFormControlFile2\"\r\n              value={selectedOffer?.offerTitle}\r\n              disabled\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleFormControlFile2\">\r\n              Product Discount in %\r\n            </label>\r\n            <br />\r\n            <input\r\n              type=\"number\"\r\n              name=\"discount\"\r\n              id=\"exampleFormControlFile2\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              onChange={(e) => setDiscount(e.target.value)}\r\n              value={discount}\r\n            />\r\n          </div>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton onClick={toggle} color=\"primary\">\r\n            Cancel\r\n          </CButton>\r\n          <CButton onClick={addProductToOffers} color=\"primary\">\r\n            Confirm\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      {event?.type === \"error\" && (\r\n        <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n          <CAlert color=\"danger\">{event.massage}</CAlert>\r\n        </div>\r\n      )}\r\n      {event?.type === \"success\" && (\r\n        <div className=\"position-fixed fixed-top d-flex justify-content-center\">\r\n          <CAlert color=\"success\">{event.massage}</CAlert>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProductLists;\r\n"],"sourceRoot":""}