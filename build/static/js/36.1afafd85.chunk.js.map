{"version":3,"sources":["views/users/User.js"],"names":["User","match","useState","usersData","setUsersData","token","useSelector","selectUser","useEffect","axios","get","process","headers","Authorization","then","data","user","catch","err","console","log","find","_id","toString","params","id","userDetails","Object","entries","className","name","lg","map","index","key","value"],"mappings":"qQAkEeA,UA3DF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,EAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACQC,EAAUC,YAAYC,KAAtBF,MACRG,qBAAU,WACRC,IACGC,IAAIC,4CAAwD,CAC3DC,QAAS,CACPC,cAAc,UAAD,OAAYR,MAG5BS,MAAK,SAACC,GACLX,EAAaW,EAAKA,KAAKC,SAExBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,CAACb,IAEJ,IAAMW,EAAI,OAAGb,QAAH,IAAGA,OAAH,EAAGA,EAAWkB,MACtB,SAACL,GAAD,OAAUA,EAAKM,IAAIC,aAAetB,EAAMuB,OAAOC,MAE3CC,EAAcV,EAChBW,OAAOC,QAAQZ,GACf,CACE,CACE,KACA,iCACE,cAAC,IAAD,CAAOa,UAAU,aAAaC,KAAK,iBADrC,kBAMR,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAI,EAAV,SACE,eAAC,IAAD,WACE,eAAC,IAAD,uBAAuB9B,EAAMuB,OAAOC,MACpC,cAAC,IAAD,UACE,uBAAOI,UAAU,kCAAjB,SACE,gCACGH,EAAYM,KAAI,WAAeC,GAAW,IAAD,mBAAvBC,EAAuB,KAAlBC,EAAkB,KACxC,OACE,+BACE,uCAAQD,EAAR,OACA,6BACE,iCAASC,QAHJF,EAAMV","file":"static/js/36.1afafd85.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { selectUser } from \"src/localyStore\";\r\n\r\nconst User = ({ match }) => {\r\n  const [usersData, setUsersData] = useState(null);\r\n  const { token } = useSelector(selectUser);\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SERVER + \"/api/auth/userDetails\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((data) => {\r\n        setUsersData(data.data.user);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [token]);\r\n\r\n  const user = usersData?.find(\r\n    (user) => user._id.toString() === match.params.id\r\n  );\r\n  const userDetails = user\r\n    ? Object.entries(user)\r\n    : [\r\n        [\r\n          \"id\",\r\n          <span>\r\n            <CIcon className=\"text-muted\" name=\"cui-icon-ban\" /> Not found\r\n          </span>,\r\n        ],\r\n      ];\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol lg={6}>\r\n        <CCard>\r\n          <CCardHeader>User id: {match.params.id}</CCardHeader>\r\n          <CCardBody>\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                {userDetails.map(([key, value], index) => {\r\n                  return (\r\n                    <tr key={index.toString()}>\r\n                      <td>{`${key}:`}</td>\r\n                      <td>\r\n                        <strong>{value}</strong>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\n/////////////// Admin\r\n"],"sourceRoot":""}